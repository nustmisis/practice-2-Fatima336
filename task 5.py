#Задана строка S и символ С. За один ход можно поменять местами два соседних символа. Сколько потребуется ходов чтобы переместить все символы С в строке в начало строки, не меняя при этом порядок следования между остальным символами.
#Например, имеется строка abcabcabc, и задан символ b. После перемещения всех символов b в начало строки, получится строка 
#bbbacacac, на это уйдёт 9 ходов, ниже указаны строки получившиеся после кажого хода.
#1. bacabcabc
#
#2. bacbacabc
#
#3. batcacabe
#
#4. bbacacabc
#
#5. bbacacbac
#
#6. bbacabcac 
#
#7. bbacbacac
#
#8. bbabcacac 
#
#9. bbbacacac
#
#Входные данные
#
#Задана строка 5, состоящая из прописных бука латинского алфавита, и символ С через пробел. Длина строки не превышает 100 символов. Гарантируется, что символ С встречается в строке 5.
#
#Выходные данные
#
#Выведите единственное числе количество ходов, которое потребуется, чтобы переместить все символы с начало строки
#
#Примеры
#
#входные данные
#
#аbrahcabe b
#
#выходные данные
#9
a  = 'abcrahcabect c'
l = []
work = a.split()
a = work[0]
s = work[1]
# создадим список, состоящий из символов строки a
for i in range(0, len(a)):
    l.append(a[i])

k = 1 # количество ходов, необходимых для решения задачи и первоначально равных единице
n = 0 # подсчет количества букв "с" в строке
# Найдем количество букв "с" в строке l
for i in range(0, len(l)):
    if(l[i] == s):
        n+=1
# Меняем символы списка до тех пор, пока первые n символов списка не станут равными символу s        
part_l = []
for i in range(0, n):
    part_l.append(s)

while l[0:n] != part_l:
    for i in range(1, len(l)):
        if (l[i] == s):
            t = l[i-1]
            l[i-1] = l[i]
            l[i] = t
            k += 1
print(k)